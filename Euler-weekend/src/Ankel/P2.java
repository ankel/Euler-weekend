package Ankel;

/**
 *
 * @author Binh Tran
 * 
 * Problem 2: Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be: 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 *  find the sum of the even-valued terms 
 */
public class P2 {

  public static final int UPPER_BOUND = 4 * (int)Math.pow(10, 6);
  
  /**
   * @param args the command line arguments
   */
  public static void main(String[] args) {
    int fib1 = 1, fib2 = 2,
      temp;
    long sum = 2;
    
    while (fib2 <= UPPER_BOUND) {
      temp = fib1 + fib2;
      fib1 = fib2;
      fib2 = temp;
      sum += (fib2 % 2 == 0 ? fib2 : 0);
    }
    
    System.out.println(sum);
    
  }
  
}
